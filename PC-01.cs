using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;

namespace Windows_Vulnerability_Analysis_Tool
{
    public class PC_01

    {


        int period;
        int Age;

        public object CheckPassword()
        {

            //Console.WriteLine("checkpassword"); 

            using (RegistryKey key = Registry.LocalMachine.OpenSubKey(@"SYSTEM\CurrentControlSet\Services\Netlogon\Parameters"))
            {

                Object Age = key.GetValue("MaximumPasswordAge", "계정 비밀번호 최대 기한값을 찾을 수 없습니다.").ToString();
                key.Close();
                //var PE = new PasswordExpiration();
                //tostring() 은 문자열로 변환하는 메소드. 그러므로 현재 age변수의 자료형은 string?

                if (Age != null)
                {
                    return Age; //얘가 문제.


                }

            }
            throw new Exception("윈도우 계정 비밀번호 설정을 찾을 수 없습니다.");
        }




        public int BooleanpasswordPeriod()
        {

            //var PE = new PasswordExpiration();  //var : 자료형을 자동으로 저장하는 자료형

            object result = CheckPassword();

            //Console.WriteLine(result);
            //Console.WriteLine(result.GetType().Name);
            //result값은 string값임.


            int pwd = Convert.ToInt32(result);
            //Console.WriteLine(pwd);
            //Console.WriteLine(pwd.GetType().Name);



            //sixteen = Convert.ToInt32(PE.Age, 16); //기한이 16진수일수있으니 10진수로변환
            //sixteen =- 16진수로 표현한 암호만료기간
            //Console.WriteLine("암호 만료 기간은 " + pwd + "일.");

            if (pwd != 0 && pwd < 90)
            {
                //Console.WriteLine("암호 만료 기간이 설정되어있으며 그 값이 90일 이하입니다. 양호.\n");
                return 1;

            }
            else if (pwd > 90 || pwd == 0)
            {
                //Console.WriteLine("암호만료기간이 미설정 혹은 90일 이상입니다. 취약.");
                return 0;
            }
            else
            {
                //Console.WriteLine("예외");
                return 0;
            }
        }


        public int EditPasswordPeriod()
        //레지스트리값 변경한 후에 키 닫고, 일전에 만든 passwordperiod함수 호출해서 잘 바뀌었으면 1, 아니면 0 리턴.

        {

            using (RegistryKey key = Registry.LocalMachine.OpenSubKey(@"SYSTEM\CurrentControlSet\Services\Netlogon\Parameters", true))
            {

                key.SetValue("MaximumPasswordAge", 90);
                key.Close();

            }
            throw new Exception("윈도우 계정 비밀번호 변경이 불가능합니다.");



            int check = BooleanpasswordPeriod();

            if (check == 1)
            {
                return 1;
            }
            else if (check == 0)
            {
                return 0;
            }



        }
    }
}
