using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace Windows_Vulnerability_Analysis_Tool
{
    /// <summary>
    /// CheckBox.xaml에 대한 상호 작용 논리
    /// </summary>
    /// 

    public class CheckboxItem
    {
        public string Name { get; set; }
        public bool IsChecked { get; set; }
    }
    public partial class CheckBox : Window
    {
        public CheckBox()
        {
            InitializeComponent();

            var items = new List<CheckboxItem>
            {
                new CheckboxItem { Name = "패스워드 주기적 변경", IsChecked = false },
                new CheckboxItem { Name = "패스워드 정책이 해당 기관의 보안 정책에 적합하게 설정", IsChecked = false },
                // new CheckboxItem { Name = "공유 폴더 제거", IsChecked = false },
                new CheckboxItem { Name = "항목의 불필요한 서비스 제거", IsChecked = false },
                new CheckboxItem { Name = "최신 서비스팩 적용", IsChecked = false },
                // new CheckboxItem { Name = "바이러스 백신 프로그램 설치 및 주기적 업데이트", IsChecked = false },
                // new CheckboxItem { Name = "바이러스 백신 프로그램에서 제공하는 실시간 감시 기능 활성화", IsChecked = false },
                new CheckboxItem { Name = "OS에서 제공하는 침입차단 기능 활성화", IsChecked = false },
                new CheckboxItem { Name = "화면보호기 대기 시간 설정 및 재시작 시 암호 보호 설정", IsChecked = false },
 
            
            // 추가 항목들...
            };

            CheckboxListView.ItemsSource = items;
        }

        private void AutoFixButton_Click(object sender, RoutedEventArgs e)
        {
            
            bool? Result = new MessageBox("선택한 항목을 자동조치하시겠습니까?", MessageType.Confirmation, MessageButtons.OkCancel).ShowDialog();
            
            if (Result.Value) // 사용자가 "확인" 버튼을 클릭한 경우
            {
                List<CheckboxItem> checkedItems = CheckboxListView.Items.OfType<CheckboxItem>()
                    .Where(item => item.IsChecked)
                    .ToList();


                foreach (CheckboxItem item in checkedItems)
                {
                    if (item.Name == "패스워드 주기적 변경")
                    {
                        PC_01 PC01 = new PC_01();
                        PC01.EditPasswordPeriod();
                    }
                    else if (item.Name == "패스워드 정책이 해당 기관의 보안 정책에 적합하게 설정")
                    {
                        PC_01 PC01 = new PC_01();
                        PC01.EditPasswordPeriod();
                    }
                    else if (item.Name == "항목의 불필요한 서비스 제거")
                    {
                        PC_04_auto PC04Auto = new PC_04_auto();
                        PC04Auto.AutoServicesStop();
                    }
                    else if (item.Name == "최신 서비스팩 적용")
                    {
                        PC_06_auto PC06Auto = new PC_06_auto();
                        PC06Auto.AutoWindowUpdate();
                    }
                    else if (item.Name == "OS에서 제공하는 침입차단 기능 활성화")
                    {
                        PC_11 PC11 = new PC_11();
                        PC11.EnableFirewall();
                    }
                    else if (item.Name == "화면보호기 대기 시간 설정 및 재시작 시 암호 보호 설정")
                    {
                        PC_12 PC12 = new PC_12();
                        PC12.SetScreenSaverTimeout();
                    }

                }

               
            }
        
            bool? result = MessageBox.Show("선택하신 항목의 자동 조치가 완료되었습니다!", MessageType.Confirmation, MessageButtons.OkCancel);
         

            this.Close();
        }

    }
}
