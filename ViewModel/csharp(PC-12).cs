using System;
using Microsoft.Win32;

class Program
{
    static void Main(string[] args)
    {
        try
        {
            bool isScreenSaverSecure = CheckScreenSaverStatus();
            string screenSaverStatus = isScreenSaverSecure ? "양호" : "취약";
            Console.WriteLine("화면보호기 최종 결과: " + screenSaverStatus);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"화면보호기 상태 체크 중 오류 발생: {ex.Message}");
        }
    }

    static bool CheckScreenSaverStatus()
    {
        using (RegistryKey key = Registry.CurrentUser.OpenSubKey(@"Control Panel\Desktop"))
        {
            if (key != null)
            {
                Object o = key.GetValue("ScreenSaveTimeOut");
                Object p = key.GetValue("ScreenSaverIsSecure");
                Object q = key.GetValue("SCRNSAVE.EXE");

                if (o != null && p != null && q != null)
                {
                    int screenSaveTimeOut;
                    bool parseResult = Int32.TryParse(o.ToString(), out screenSaveTimeOut);

                    if (!parseResult)
                        throw new Exception("화면보호기 대기 시간을 가져오는데 실패했습니다.");

                    // 대기시간이 10분 이하이고, 암호로 보호가 설정되어 있으며, 화면 보호기가 선택되어 있는 경우 양호.
                    bool isTimeoutValid = screenSaveTimeOut <= 600;
                    bool isSecureEnabled = p.ToString() == "1";
                    bool isScreensaverSelected = !string.IsNullOrEmpty(q.ToString());

                    // 대기시간, 로그온 화면 표시, 화면 보호기 설정 여부를 기준으로 양호 또는 취약 판단.
                    // 각각의 조건에 따라 메시지를 출력합니다.
                    Console.WriteLine("화면 보호기의 대기 시간: " + (isTimeoutValid ? "10분 이하" : "10분 이상") +
                                      ((isTimeoutValid && isSecureEnabled && isScreensaverSelected) ? " 양호" : " 취약"));
                    Console.WriteLine("로그온 화면 표시: " + (isSecureEnabled ? "설정" : "미설정") +
                                      ((isTimeoutValid && isSecureEnabled && isScreensaverSelected) ? " 양호" : " 취약"));
                    Console.WriteLine("화면 보호기: " + (isScreensaverSelected ? "설정" : "미설정") +
                                      ((isTimeoutValid && isSecureEnabled && isScreensaverSelected) ? " 양 호" : " 취 약"));


                    return (isTimeoutValid && isSecureEnabled && isScreensaverSelected);
                }
                else
                {
                    Console.WriteLine("화면보호기 설정을 찾을 수 없습니다. 최종 결과: 취약");
                    return false; // 화면보호기 설정이 없으므로 취약으로 판단
                }
            }

            throw new Exception("레지스트리 키를 열 수 없습니다.");
        }
    }
}
