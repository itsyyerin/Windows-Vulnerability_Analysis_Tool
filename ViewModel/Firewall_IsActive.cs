using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Management;
using Microsoft.Win32;

namespace Windows_Vulnerability_Analysis_Tool.ViewModel
{
    public class Firewall_IsActive
    {

        public static bool CheckFirewallStatus()
        {
            bool isWindowsFirewallEnabled = IsWindowsFirewallEnabled();

            if (isWindowsFirewallEnabled)
                return true;
            bool isThirdPartyFirewallEnabled = IsThirdPartyFireWallEnabled();
            return isThirdPartyFirewallEnabled;
        }
        static bool IsWindowsFirewallEnabled()
        {
            using (RegistryKey key = Registry.LocalMachine.OpenSubKey(@"System\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile"))
            {
                if (key != null)
                {
                    Object o = key.GetValue("EnableFireWall");
                    if (o != null)
                    {
                        return Convert.ToBoolean(o);
                    }
                }
            }
            throw new Exception("윈도우 방화벽 설정을 찾을 수 없습니다.");
        }
        static bool IsThirdPartyFireWallEnabled()
        {
            ManagementScope scope = new ManagementScope("\\\\.\\ROOT\\SecurityCenter2");
            scope.Connect();
            ObjectQuery query = new ObjectQuery("SELECT * FROM FirewallProduct");
            ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);
            foreach (ManagementObject queryObj in searcher.Get())
            {
                if ((uint)queryObj["firewallEnabled"] == 1)
                {
                    return true;
                }
            }
            return false;
        }
    }
}
