using System;
using System.Management;
using Microsoft.Win32;

class Program
{
    static void Main(string[] args)
    {
        try
        {
            bool isFirewallEnabled = CheckFirewallStatus();
            string firewallStatus = isFirewallEnabled ? "양호" : "취약";
            Console.WriteLine("방화벽 상태: " + firewallStatus);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"방화벽 상태 체크 중 오류 발생: {ex.Message}");
        }
    }
    static bool CheckFirewallStatus()
    {
        bool isWindowsFirewallEnabled = IsWindowsFirewallEnabled();

        if (isWindowsFirewallEnabled)
            return true;
        bool isThirdPartyFirewallEnabled = IsThirdPartyFireWallEnabled();
        return isThirdPartyFirewallEnabled;
    }
    static bool IsWindowsFirewallEnabled()
    {
        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(@"System\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile"))
        {
            if (key != null)
            {
                Object o = key.GetValue("EnableFireWall");
                if (o != null)
                {
                    return Convert.ToBoolean(o);
                }
            }
        }
        throw new Exception("윈도우 방화벽 설정을 찾을 수 없습니다.");
    }
    static bool IsThirdPartyFireWallEnabled()
    {
        ManagementScope scope = new ManagementScope("\\\\.\\ROOT\\SecurityCenter2");
        scope.Connect();
        ObjectQuery query = new ObjectQuery("SELECT * FROM FirewallProduct");
        ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);
        foreach (ManagementObject queryObj in searcher.Get())
        {
            if ((uint)queryObj["firewallEnabled"] == 1)
            {
                return true;
            }
        }
        return false;
    }
}
