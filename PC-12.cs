using System;
using Microsoft.Win32;

namespace Windows_Vulnerability_Analysis_Tool
{
    public class PC_12
    {
        public int CheckScreenSaverStatus()
        {
            using (RegistryKey key = Registry.CurrentUser.OpenSubKey(@"Control Panel\Desktop"))
            {
                if (key != null)
                {
                    Object o = key.GetValue("ScreenSaveTimeOut");
                    Object p = key.GetValue("ScreenSaverIsSecure");
                    Object q = key.GetValue("SCRNSAVE.EXE");

                    if (o != null && p != null && q != null)
                    {
                        int screenSaveTimeOut;
                        bool parseResult = Int32.TryParse(o.ToString(), out screenSaveTimeOut);

                        if (!parseResult)
                            throw new Exception("화면보호기 대기 시간을 가져오는데 실패했습니다.");

                        bool isTimeoutValid = screenSaveTimeOut <= 600;
                        bool isSecureEnabled = p.ToString() == "1";
                        bool isScreensaverSelected = !string.IsNullOrEmpty(q.ToString());

                        if (isTimeoutValid && isSecureEnabled && isScreensaverSelected)
                        {
                            return 1;
                        }
                        else
                        {
                            return 0;
                        }
                    }
                    else
                    {
                        return 0;
                    }
                }

                throw new Exception("레지스트리 키를 열 수 없습니다.");
            }
        }
    }
}
