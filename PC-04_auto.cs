using System;
using System.Diagnostics;
using System.Security.Principal;

namespace Windows_Vulnerability_Analysis_Tool
{
    public class PC_04_auto
    {
        public void AutoServicesStop()
        {
            // 종료할 서비스 목록
            string[] servicesToStop = {
                "Alerter",
                "wuauserv",  // Automatic Updates
                "ClipSVC",   // Clipbook
                "Browser",   // Computer Browser
                // "CryptSvc",  // Cryptographic Services
                // "TrkWks",    // Distributed Link Tracking Client
                "TrkSvr",    // Distributed Link Tracking Server
                // "Dnscache",  // DNS Client
                "ERSvc",     // Error Reporting Service
                "HidServ",   // Human Interface Device Access
                "ImapiService",  // IMAPI CD-Burning COM Service
                "irmon",     // Infrared Monitor
                "Messenger",
                "mnmsrvc",   // NetMeeting Remote Desktop Sharing
                "ose",       // Office Source Engine
                "ImapiPService",  // Portable Media Serial Number
                "Spooler",   // Print Spooler
                "RemoteRegistry",
                "stisvc",    // Windows Image Acquisition (WIA)
                "upnphost",  // Universal Plug and Play Device Host
                "WZCSVC"     // Wireless Zero Configuration
            };

            // 서비스 종료
            StopServices(servicesToStop);

            return;
        }

        public void StopServices(string[] serviceNames)
        {
            foreach (var serviceName in serviceNames)
            {
                StopService(serviceName);
            }
        }

        public void StopService(string serviceName)
        {
            try
            {
                using (Process process = new Process())
                {
                    ProcessStartInfo startInfo = new ProcessStartInfo
                    {
                        FileName = "powershell.exe",
                        Arguments = $"Stop-Service -Name \"{serviceName}\"",
                        CreateNoWindow = true,
                        RedirectStandardOutput = true,
                        UseShellExecute = false,
                        RedirectStandardError = true,
                        RedirectStandardInput = true
                    };

                    process.StartInfo = startInfo;
                    process.Start();

                    // Read the output and error streams asynchronously.
                    string output = process.StandardOutput.ReadToEnd();
                    string error = process.StandardError.ReadToEnd();

                    // Wait for the process to exit.
                    process.WaitForExit();

                }
            }
            catch (Exception ex)
            {
                return;
            }
        }

    }
}